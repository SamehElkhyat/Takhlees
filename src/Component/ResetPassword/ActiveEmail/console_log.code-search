# Query: console.log
# Including: ./src/Component
# ContextLines: 1

116 results - 42 files

src\Component\AccountantComponennt\AcceptedOrderAccountant\AcceptedOrderAccountant.jsx:
   59  
   61      }

  201        );
  203  

  214      if (OrderId == null) {
  216      } else {

src\Component\AccountantComponennt\AccountantLandingPage\AccountantLandingPage.jsx:
  20      } catch (error) {
  22      }

  34  
  36      } catch (error) {

src\Component\AccountantComponennt\HistoryOfDoneOrdersAccountant\HistoryDoneOrder.jsx:
  39  
  41      }

  69        );
  71  

src\Component\AdminComponent\blacklist\blacklist.jsx:
  37      } catch (error) {
  39  

src\Component\AdminComponent\Clients\Clients.jsx:
  64        } catch (error) {
  66          

  95        );
  97        

src\Component\AdminComponent\Permissions\Permissions.jsx:
   29  
   30:     
   31    };

   48    const Premissions = async () => {
   49:     
   50  

   58        setPremisionsarr(data);
   59
   62      } catch (error) {

   75        );
   77        setOrderId(OrderId);

   80  
   82      } catch (error) {

   88      setIsLoading(true);
   89
   91      try {

  102        toast(data.message);
  104  

  111    const DeletePremetions = async (value) => {
  
  114      try {

  125        toast(data.message);
  127      } catch (error) {
  129        toast.error(error.response.data.message);

  145        );
  147  

  166        setIsLoading(false);
  168  

  300                </Modal.Title>
  302                {premisionsarr.map((item) => (
  303                  <>
  305                    {item.type == "CustomerService" ? (

src\Component\AdminComponent\ProfileUsers\ProfileUsers.jsx:
  28        );  30        

src\Component\BrookersComponent\AvailableOrders\AvailableOrders.jsx:
  21        );
  23  

  31      if (id == 0) {
  33      } else {

src\Component\BrookersComponent\BrookersCart\BrookersCart.jsx:
  291        });
  293  

  295      } catch (error) {
  297      }

src\Component\BrookersComponent\BrookersLandingPage\BrookersLandingPage.jsx:
  19        });
  21  

  23      } catch (error) {
  25      }

  35        );
  37        setState(data);

src\Component\BrookersComponent\CurrentOffers\CurrentOffers.jsx:
  103        );
  104:       
  105        setOrders2(data);

  161        );
  162:       
  163  

  178  
  179:       
  180  

  194        );
  195:       
  196  

  203    const handleOrderClick = (id) => {
  204:     
  205    };

  231        setBar(null);
  233      } catch (error) {

src\Component\BrookersComponent\OrderDetails\OrderDetails.jsx:
   18     const navigationToLandingpage = async () => {
   20    
   27  
   28:         
   29        }

   89    const SendValue = async (cost, orderValue) => {
   90:     
   91  

  111    const mathmatecis = () => {
  112:     
  113    };

  141        setdata(data);
  142:       
  143      } catch (error) {

src\Component\ClientsComponent\Cart\Cart.jsx:
   21          setInfoOrders(data);
   22:         
   23        } catch (error) {

  292        setOrders(data);
  293:       
  294      } catch (error) {
  295:       
  296      }

src\Component\ClientsComponent\CurrentOrdersForUsers\CurrentOrdersForUsers.jsx:
  30        } else if (req.status == 400) {
  31:         
  32        }

  46        );
  47:       
  48  

src\Component\ClientsComponent\DoneOrdersforUSer\DoneOrdersForUser.jsx:
  19        );
  20:       
  21        

src\Component\ClientsComponent\HistoryOfOrdersUsers\HistoryOfOrdersUsers.jsx:
  22  
  23:       
  24        

src\Component\ClientsComponent\NewOrder\NewOrder.jsx:
  30        setDecodedTokken(data.role);
  31:       
  32        
  33      } catch (error) {
  34:       
  35      }

src\Component\ClientsComponent\Orders\Orders.jsx:
  40  
  41:       
  42        

src\Component\ClientsComponent\Tracking\Tracking.jsx:
  24        if (JSON.stringify(data) == JSON.stringify(tracing)) {
  25:         
  26        } else {

src\Component\ClientsComponent\UserPayment\UserPayment.jsx:
  16    const SendAmount = async (amount) => {
  17:     
  18  

  29      } catch (error) {
  30:       
  31        toast.error("فشلت العمليه");

src\Component\ControlPanel\Settings.jsx:
  36        });
  37:       
  38        

  42  
  43:       
  44      }

src\Component\CustomerServices\AllOrderDeleted\AllOrderDeleted.jsx:
  33  
  34:       
  35      }

  45        );
  46:       
  47  

src\Component\CustomerServices\AllOrderTransfers\AllOrderTransfers.jsx:
  56  
  57:       
  58      }

src\Component\CustomerServices\CanceledOrders\CanceledOrders.jsx:
   39        );
   40:       
   41  

   87    const ChangeStatueNot = async (id) => {
   88:     
   89      

  135        );
  136:       
  137  

src\Component\CustomerServices\DoneOrders\DoneOrders.jsx:
  106        );
  107:       
  108  

  124        );
  125:       
  126  

  158  
  159:      
  160      } catch (error) {

  193        setCustomers(data);
  194:       
  195      } catch (error) {

src\Component\CustomerServices\LandingPageCustomeService\LandingPageCustomeService.jsx:
  23        setState(data);
  24:       
  25      } catch (error) {

src\Component\LandingPageAdmin\LandingPageAdmin.jsx:
  24      } catch (error) {
  25:       
  26      }

src\Component\LandingPageForUsers\LandingPageForUsers.jsx:
  29      } catch (error) {
  30:       
  31      }

src\Component\MangerComponennt\AllClientsManger\AllClientsManger.jsx:
  45      } catch (error) {
  46:       
  47  

  64      } catch (error) {
  65:       
  66      }

  81      } catch (error) {
  82:       
  83      }

  96      } catch (error) {
  97:       
  98      }

src\Component\MangerComponennt\blacklistManger\blacklistManger.jsx:
  29      } catch (error) {
  30:       
  31      }

  46      } catch (error) {
  47:       
  48      }

  63      } catch (error) {
  64:       
  65  

  79      } catch (error) {
  80:       
  81      }

src\Component\MangerComponennt\BrookersManger\BrookersManger.jsx:
   47        } catch (error) {
   48:         
   49    

   68      } catch (error) {
   69:       
   70      }

   88      } catch (error) {
   89:       
   90      }

  100        );
  101:       
  102        

  104      } catch (error) {
  105:       
  106      }

src\Component\MangerComponennt\ClientsManger\ClientsManger.jsx:
  38      } catch (error) {
  39:       
  40  

  57      } catch (error) {
  58:       
  59      }

  74      } catch (error) {
  75:       
  76      }

  88      } catch (error) {
  89:       
  90      }

src\Component\MangerComponennt\CpanelAccountantManger\CpanelAccountantManger.jsx:
  41      } catch (error) {
  42:       
  43      }

  58      } catch (error) {
  59:       
  60      }

  75          } catch (error) {
  76:         
  77      

  91      } catch (error) {
  92:       
  93      }

src\Component\MangerComponennt\CPanelCustomeServiceManger\CPanelCustomerServiceManger.jsx:
  37      } catch (error) {
  38:       
  39  

  55      } catch (error) {
  56:       
  57      }

  72      } catch (error) {
  73:       
  74      }

  86      } catch (error) {
  87:       
  88      }

src\Component\MangerComponennt\LandingPageManger\LandingPageManger.jsx:
  26        setAllprimessions(data);
  27:       
  28      } catch (error) {
  29:       
  30      }

src\Component\MangerComponennt\LogsOrders\LogsOrders.jsx:
  15  
  16:       
  17        setSelectedOrder(data);
  18      } catch (error) {
  19:       
  20      }

  29      } catch (error) {
  30:       
  31      }

  43      } catch (error) {
  44:       
  45        

src\Component\MangerComponennt\statisticsManger\statisticsManger.jsx:
  18      } catch (error) {
  19:       
  20      }

  31      } catch (error) {
  32:       
  33      }

src\Component\NavBar\NavBar.jsx:
  35  
  36:       
  37      }

  47  
  48:       
  49      }

src\Component\ResetPassword\ResetPassword.jsx:
  23      onSubmit: async (values) => {
  24:       
  25  

  34  
  35:         
  36  

src\Component\ResetPassword\ActiveEmail\ActiveEmail.jsx:
  15    const SendCode = async (values) => {
  16:     
  17:                                                                  
  18       

  31        toast.success(response.data.message);
  32:       
  33        

src\Component\ResetPassword\ConfirmPassowrd\ConfirmPassword.jsx:
  23  
  24:       
  25  

src\Component\SignIn\SignIn.jsx:
  36        if (data.message == "تم تسجيل الدخول بنجاح") {
  37:         
  38  
